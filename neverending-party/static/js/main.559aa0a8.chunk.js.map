{"version":3,"sources":["svg/player.svg","svg/npc1.svg","svg/npc2.svg","svg/npc3.svg","svg/npc4.svg","svg/npc5.svg","svg/npc6.svg","svg/npc7.svg","svg/npc8.svg","svg/npc9.svg","svg/npc10.svg","svg/npc11.svg","svg/npc12.svg","svg/npc13.svg","svg/npc14.svg","svg/npc15.svg","svg/npc16.svg","svg/npc17.svg","svg/npc18.svg","svg/npc19.svg","svg/npc20.svg","svg/npc21.svg","svg/npc22.svg","svg/npc23.svg","svg/npc24.svg","svg/npc25.svg","svg/npc26.svg","svg/npc27.svg","svg/npc28.svg","svg/npc29.svg","svg/npc30.svg","svg/npc-checked1.svg","svg/npc-checked2.svg","svg/npc-checked3.svg","svg/npc-checked4.svg","svg/npc-checked5.svg","svg/npc-checked6.svg","svg/npc-checked7.svg","svg/npc-checked8.svg","svg/npc-checked9.svg","svg/npc-checked10.svg","svg/npc-checked11.svg","svg/npc-checked12.svg","svg/npc-checked13.svg","svg/npc-checked14.svg","svg/npc-checked15.svg","svg/npc-checked16.svg","svg/npc-checked17.svg","svg/npc-checked18.svg","svg/npc-checked19.svg","svg/npc-checked20.svg","svg/npc-checked21.svg","svg/npc-checked22.svg","svg/npc-checked23.svg","svg/npc-checked24.svg","svg/npc-checked25.svg","svg/npc-checked26.svg","svg/npc-checked27.svg","svg/npc-checked28.svg","svg/npc-checked29.svg","svg/npc-checked30.svg","actions/types.ts","actions/game.ts","reducers/game.ts","components/Board.tsx","utils/calc.ts","components/Header.tsx","components/ActionCard.tsx","svg/index.ts","utils/data.ts","components/HelpModal.tsx","components/AboutModal.tsx","components/WinModal.tsx","components/App.tsx","reducers/index.ts","index.tsx"],"names":["module","exports","GameActionTypes","GameStatus","MessageType","resetGame","type","ResetGame","displayHelp","isDisplay","DisplayHelp","payload","displayAbout","DisplayAbout","options","height","width","layout","hierarchical","edges","arrows","to","enabled","color","Board","connect","npcs","game","selectNpc","npcId","SelectNpc","nodes","map","id","name","level","avatarUrl","avatarSavedUrl","isCursed","label","image","shape","forEach","npc","friends","friendId","push","from","graph","events","select","event","length","calcWinChance","playerLvl","npcLvl","diff","lvlExps","calcExpInfo","exp","i","nextLvlExp","curLvl","calcOutcome","winChance","roll","Math","floor","random","console","log","calcAdditonalSaved","saved","friend","Header","player","turns","score","menu","Item","onClick","title","style","border","background","tags","key","extra","className","overlay","padding","fontSize","verticalAlign","avatar","src","ActionCard","selectedNpc","playBeerPong","PlayBeerPong","size","textAlign","disabled","avatars","avatar1","avatar2","avatar3","avatar4","avatar5","avatar6","avatar7","avatar8","avatar9","avatar10","avatar11","avatar12","avatar13","avatar14","avatar15","avatar16","avatar17","avatar18","avatar19","avatar20","avatar21","avatar22","avatar23","avatar24","avatar25","avatar26","avatar27","avatar28","avatar29","avatar30","npcChecked","avatarChecked1","avatarChecked2","avatarChecked3","avatarChecked4","avatarChecked5","avatarChecked6","avatarChecked7","avatarChecked8","avatarChecked9","avatarChecked10","avatarChecked11","avatarChecked12","avatarChecked13","avatarChecked14","avatarChecked15","avatarChecked16","avatarChecked17","avatarChecked18","avatarChecked19","avatarChecked20","avatarChecked21","avatarChecked22","avatarChecked23","avatarChecked24","avatarChecked25","avatarChecked26","avatarChecked27","avatarChecked28","avatarChecked29","avatarChecked30","npcData","getInitialGameState","status","help","notifyOutcome","isWin","student","additonalSaved","messageType","message","description","duration","success","error","notification","top","notifyLevelUp","tips","HelpModal","isHelp","onClickContinue","visible","onOk","onCancel","footer","header","bordered","dataSource","renderItem","tip","AboutModal","isAbout","about","href","target","rel","WinModal","win","_App","Component","App","reducers","combineReducers","state","action","savedNpcs","concat","includes","expGained","reduce","acc","normal","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"iHAAAA,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,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","file":"static/js/main.559aa0a8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/player.d4caa2e1.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc1.356f91ce.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc2.61c29269.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc3.8c47ad64.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc4.da1e7fbc.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc5.42ffba85.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc6.2c6fd111.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc7.87020157.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc8.0197c3c5.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc9.bb16542d.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc10.62454f93.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc11.cbda5143.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc12.381cdd04.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc13.9c32afc2.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc14.bb60f07f.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc15.89ad11d1.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc16.b33ffb83.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc17.9dcee5ef.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc18.aca7586e.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc19.f172c707.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc20.8f6ce1f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc21.694f6ab7.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc22.541f48ee.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc23.6885d11c.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc24.d225015e.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc25.231e1b6e.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc26.b4387d33.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc27.20e73b4f.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc28.5dd175c1.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc29.4940274a.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc30.3003479e.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc-checked1.71345b6b.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc-checked2.155e5fd7.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc-checked3.29488ba6.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc-checked4.9b022ce2.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc-checked5.ccb948f8.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc-checked6.1ccbd584.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc-checked7.3fdc3075.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc-checked8.96143484.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc-checked9.7b7df16c.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc-checked10.dd4abfb1.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc-checked11.34831a3d.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc-checked12.c77c1d6a.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc-checked13.eaa3a96e.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc-checked14.ebedc01f.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc-checked15.fc5b8d3f.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc-checked16.818ac984.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc-checked17.f01648c9.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc-checked18.71796350.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc-checked19.8c54942b.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc-checked20.80bc8f30.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc-checked21.bf1da8f4.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc-checked22.31654e89.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc-checked23.46cf6e23.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc-checked24.a9f11803.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc-checked25.55cdf1ea.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc-checked26.08f54dc9.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc-checked27.7a1fca26.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc-checked28.8d9ef947.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc-checked29.4b06cd58.svg\";","module.exports = __webpack_public_path__ + \"static/media/npc-checked30.9f174564.svg\";","import {\n    ResetGameAction,\n    SelectNpcAction,\n    PlayBeerPongAction,\n    DisplayHelpAction,\n    DisplayAboutAction\n} from './game';\n\nexport enum GameActionTypes {\n    ResetGame,\n    SelectNpc,\n    PlayBeerPong,\n    DisplayHelp,\n    DisplayAbout\n}\n\nexport type GameAction =\n    | ResetGameAction\n    | SelectNpcAction\n    | PlayBeerPongAction\n    | DisplayHelpAction\n    | DisplayAboutAction;\n","import { GameActionTypes } from './types';\n\nexport interface ResetGameAction {\n    type: GameActionTypes.ResetGame;\n}\n\nexport interface SelectNpcAction {\n    type: GameActionTypes.SelectNpc;\n    payload: number | undefined | null;\n}\n\nexport interface PlayBeerPongAction {\n    type: GameActionTypes.PlayBeerPong;\n    payload: number;\n}\n\nexport interface DisplayHelpAction {\n    type: GameActionTypes.DisplayHelp;\n    payload: boolean;\n}\n\nexport interface DisplayAboutAction {\n    type: GameActionTypes.DisplayAbout;\n    payload: boolean;\n}\n\nexport const resetGame = (): ResetGameAction => ({\n    type: GameActionTypes.ResetGame\n});\n\nexport const selectNpc = (\n    npcId: number | undefined | null\n): SelectNpcAction => ({\n    type: GameActionTypes.SelectNpc,\n    payload: npcId\n});\n\nexport const playBeerPong = (npcId: number): PlayBeerPongAction => ({\n    type: GameActionTypes.PlayBeerPong,\n    payload: npcId\n});\n\nexport const displayHelp = (isDisplay: boolean): DisplayHelpAction => ({\n    type: GameActionTypes.DisplayHelp,\n    payload: isDisplay\n});\n\nexport const displayAbout = (isDisplay: boolean): DisplayAboutAction => ({\n    type: GameActionTypes.DisplayAbout,\n    payload: isDisplay\n});\n","import { notification } from 'antd';\nimport { GameAction, GameActionTypes } from '../actions';\nimport { getInitialGameState } from '../utils/data';\nimport {\n    calcWinChance,\n    calcOutcome,\n    calcAdditonalSaved,\n    calcExpInfo\n} from '../utils/calc';\n\nexport enum GameStatus {\n    normal,\n    win,\n    help,\n    about\n}\n\nenum MessageType {\n    success = 'success',\n    error = 'error'\n}\n\nexport interface GameState {\n    status: GameStatus;\n    turns: number;\n    score: number;\n    player: Player;\n    npcs: Npc[];\n    selectedNpc: number | undefined | null;\n}\n\nexport interface Player {\n    name: string;\n    avatarUrl: string;\n    level: number;\n    exp: number;\n}\n\nexport interface Npc {\n    id: number;\n    name: string;\n    avatarUrl: string;\n    avatarSavedUrl: string;\n    level: number;\n    isCursed: boolean;\n    friends: number[];\n}\n\nconst notifyOutcome = (\n    isWin: boolean,\n    student: string,\n    additonalSaved: number\n) => {\n    let messageType: MessageType,\n        message: string,\n        description: string,\n        duration = 2;\n    if (isWin) {\n        messageType = MessageType.success;\n        message = 'Won!';\n        description = additonalSaved\n            ? additonalSaved > 1\n                ? `You won the beer pong duel against ${student}, and also saved ${additonalSaved} other students from the curse!`\n                : `You won the beer pong duel against ${student}, and also saved one other student from the curse!`\n            : `You won the beer pong duel against ${student}!`;\n        duration = additonalSaved ? 4 : 2;\n    } else {\n        messageType = MessageType.error;\n        message = 'Lost!'!;\n        description = `You lost the beer pong duel against ${student}`;\n    }\n    notification[messageType]({\n        message,\n        description,\n        duration,\n        top: 77\n    });\n};\n\nconst notifyLevelUp = (level: number) => {\n    notification.success({\n        message: 'Level up!',\n        description: `You are now at level ${level}`,\n        duration: 2,\n        top: 77\n    });\n};\n\nexport const gameReducer = (\n    state: GameState = getInitialGameState(),\n    action: GameAction\n): GameState => {\n    switch (action.type) {\n        case GameActionTypes.PlayBeerPong:\n            let { player, npcs } = state;\n            const npc = npcs[action.payload];\n            const winChance = calcWinChance(player.level, npc.level);\n            const isWin = calcOutcome(winChance);\n\n            if (!isWin) {\n                notifyOutcome(false, npc.name, 0);\n                return {\n                    ...state,\n                    turns: state.turns + 1\n                };\n            }\n\n            let savedNpcs = [npc.id];\n            const additonalSaved = calcAdditonalSaved(npcs, npc.friends);\n            savedNpcs = savedNpcs.concat(additonalSaved);\n            npcs = npcs.map((npc, id) => {\n                if (savedNpcs.includes(id)) {\n                    return {\n                        ...npc,\n                        isCursed: false\n                    };\n                }\n                return npc;\n            });\n\n            const expGained = savedNpcs.reduce(\n                (acc, npcId) => acc + npcs[npcId].level,\n                0\n            );\n\n            notifyOutcome(true, npc.name, savedNpcs.length - 1);\n            const exp = player.exp + expGained;\n            const level = calcExpInfo(exp).curLvl;\n\n            if (level > player.level) {\n                notifyLevelUp(level);\n            }\n\n            player = {\n                ...player,\n                exp,\n                level\n            };\n\n            const score = state.score + savedNpcs.length;\n            let status = GameStatus.normal;\n            if (score === npcs.length) {\n                status = GameStatus.win;\n            }\n\n            return {\n                ...state,\n                player,\n                npcs,\n                score,\n                turns: state.turns + 1,\n                status\n            };\n        case GameActionTypes.SelectNpc:\n            return {\n                ...state,\n                selectedNpc: action.payload\n            };\n        case GameActionTypes.ResetGame:\n            return getInitialGameState();\n        case GameActionTypes.DisplayHelp:\n            return {\n                ...state,\n                status: action.payload ? GameStatus.help : GameStatus.normal\n            };\n        case GameActionTypes.DisplayAbout:\n            return {\n                ...state,\n                status: action.payload ? GameStatus.about : GameStatus.normal\n            };\n        default:\n            return state;\n    }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Graph from 'react-graph-vis';\nimport { StoreState } from '../reducers';\nimport { Npc } from '../reducers/game';\nimport { selectNpc } from '../actions';\n\ninterface AppProps {\n    npcs: Npc[];\n    selectNpc: typeof selectNpc;\n}\n\nconst options = {\n    height: '80vh',\n    width: '100%',\n    layout: {\n        hierarchical: false\n    },\n    edges: {\n        arrows: {\n            to: {\n                enabled: false\n            }\n        },\n        color: '#aaa'\n    }\n};\n\nconst _Board = ({ npcs, selectNpc }: AppProps) => {\n    const nodes = npcs.map(\n        ({ name, level, avatarUrl, avatarSavedUrl, isCursed }, id) => ({\n            id,\n            label: `${name} (lvl: ${level})`,\n            image: isCursed ? avatarUrl : avatarSavedUrl,\n            shape: 'image'\n        })\n    );\n\n    const edges: { to: number; from: number }[] = [];\n    npcs.forEach((npc, id) => {\n        npc.friends.forEach(friendId => {\n            edges.push({ to: friendId, from: id });\n        });\n    });\n\n    const graph = {\n        nodes,\n        edges\n    };\n\n    const events = {\n        select: function(event: any) {\n            const { nodes } = event;\n            let npcId;\n            if (nodes && nodes.length) {\n                npcId = nodes[0];\n            }\n            selectNpc(npcId);\n        }\n    };\n\n    return <Graph graph={graph} options={options} events={events} />;\n};\n\nconst mapStateToProps = ({ game }: StoreState): { npcs: Npc[] } => {\n    const { npcs } = game;\n    return {\n        npcs\n    };\n};\n\nexport const Board = connect(mapStateToProps, { selectNpc })(_Board);\n","import { Npc } from '../reducers/game';\n\nexport const calcWinChance = (playerLvl: number, npcLvl: number): number => {\n    const diff = playerLvl - npcLvl;\n    if (diff > 2) {\n        return 99;\n    }\n    if (diff === 2) {\n        return 95;\n    }\n    if (diff === 1) {\n        return 75;\n    }\n    if (diff === 0) {\n        return 50;\n    }\n    if (diff === -1) {\n        return 25;\n    }\n    if (diff === -2) {\n        return 5;\n    }\n    return 1;\n};\n\nconst lvlExps = [5, 10, 20, 40, 80, 160];\n\nexport const calcExpInfo = (\n    exp: number\n): { nextLvlExp: number; curLvl: number } => {\n    let i = 0;\n    while (exp >= lvlExps[i]) {\n        i++;\n    }\n    return {\n        nextLvlExp: lvlExps[i],\n        curLvl: i + 1\n    };\n};\n\nexport const calcOutcome = (winChance: number): boolean => {\n    const roll = Math.floor(Math.random() * 101);\n    console.log(`roll: ${roll}, winChance: ${winChance}`);\n    return roll <= winChance;\n};\n\nexport const chanceOfFriendSave = 30;\n\nexport const calcAdditonalSaved = (\n    npcs: Npc[],\n    friends: number[]\n): number[] => {\n    const saved: number[] = [];\n    friends.forEach(friend => {\n        const isSaved = calcOutcome(chanceOfFriendSave);\n        if (isSaved && npcs[friend].isCursed) {\n            saved.push(friend);\n        }\n    });\n    return saved;\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { PageHeader, Menu, Button, Dropdown, Icon, Tag } from 'antd';\nimport { StoreState } from '../reducers';\nimport { calcExpInfo } from '../utils/calc';\nimport { displayHelp, displayAbout, resetGame } from '../actions';\nimport { Player, Npc } from '../reducers/game';\n\ninterface AppProps {\n    player: Player;\n    turns: number;\n    score: number;\n    npcs: Npc[];\n    resetGame: typeof resetGame;\n    displayHelp: typeof displayHelp;\n    displayAbout: typeof displayAbout;\n}\n\nconst _Header = ({\n    player,\n    turns,\n    score,\n    npcs,\n    displayHelp,\n    displayAbout,\n    resetGame\n}: AppProps) => {\n    const { name, level, avatarUrl, exp } = player;\n\n    const menu = (\n        <Menu>\n            <Menu.Item onClick={() => displayHelp(true)}>\n                Instructions\n            </Menu.Item>\n            <Menu.Item onClick={resetGame}>Restart Game</Menu.Item>\n            <Menu.Item onClick={() => displayAbout(true)}>About</Menu.Item>\n        </Menu>\n    );\n\n    const DropdownMenu = () => (\n        <Dropdown key=\"more\" overlay={menu}>\n            <Button\n                style={{\n                    border: 'none',\n                    padding: 0\n                }}\n            >\n                <Icon\n                    type=\"ellipsis\"\n                    style={{\n                        fontSize: 20,\n                        verticalAlign: 'top'\n                    }}\n                />\n            </Button>\n        </Dropdown>\n    );\n\n    return (\n        <PageHeader\n            title={name}\n            style={{\n                border: '1px solid rgb(235, 237, 240)',\n                background: '#fff'\n            }}\n            tags={[\n                <Tag key=\"level\" color=\"blue\">{`lvl: ${level}`}</Tag>,\n                <Tag key=\"exp\" color=\"blue\">{`exp: ${exp}/${\n                    calcExpInfo(exp).nextLvlExp\n                }`}</Tag>\n            ]}\n            extra={[\n                <Tag\n                    key=\"turns\"\n                    className=\"header-extra-stat\"\n                >{`turns: ${turns}`}</Tag>,\n                <Tag\n                    key=\"score\"\n                    className=\"header-extra-stat\"\n                >{`students saved: ${score}/${npcs.length}`}</Tag>,\n                <DropdownMenu key=\"more\" />\n            ]}\n            avatar={{\n                src: avatarUrl\n            }}\n        ></PageHeader>\n    );\n};\n\nconst mapStateToProps = ({\n    game\n}: StoreState): {\n    player: Player;\n    turns: number;\n    score: number;\n    npcs: Npc[];\n} => {\n    const { player, turns, score, npcs } = game;\n    return {\n        player,\n        turns,\n        score,\n        npcs\n    };\n};\n\nexport const Header = connect(mapStateToProps, {\n    displayHelp,\n    displayAbout,\n    resetGame\n})(_Header);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Card, Button } from 'antd';\nimport { StoreState } from '../reducers';\nimport { Player, Npc } from '../reducers/game';\nimport { calcWinChance } from '../utils/calc';\nimport { playBeerPong } from '../actions';\n\ninterface AppProps {\n    player: Player;\n    npc: Npc | undefined | null;\n    playBeerPong: typeof playBeerPong;\n}\n\nconst _ActionCard = ({ player, npc, playBeerPong }: AppProps) => {\n    const onClickDuel = () => {\n        if (npc) {\n            playBeerPong(npc.id);\n        }\n    };\n\n    return npc ? (\n        <div className=\"action-card\">\n            <Card size=\"small\" title=\"Beer Pong Duel\" style={{ width: 300 }}>\n                <p>{`${player.name} (lvl: ${player.level}) vs ${npc.name} (lvl: ${npc.level})`}</p>\n                <div style={{ textAlign: 'center' }}>\n                    <Button\n                        type=\"primary\"\n                        onClick={onClickDuel}\n                        disabled={!npc.isCursed}\n                    >\n                        {npc.isCursed\n                            ? `Duel (${calcWinChance(\n                                  player.level,\n                                  npc.level\n                              )}% probability of win)`\n                            : 'Already saved from curse'}\n                    </Button>\n                </div>\n            </Card>\n        </div>\n    ) : (\n        <div></div>\n    );\n};\n\nconst mapStateToProps = ({\n    game\n}: StoreState): { player: Player; npc: Npc | undefined | null } => {\n    const { player, npcs, selectedNpc } = game;\n    let npc;\n    if (!(selectedNpc == null)) {\n        npc = npcs[selectedNpc];\n    }\n    return {\n        player,\n        npc\n    };\n};\n\nexport const ActionCard = connect(mapStateToProps, { playBeerPong })(\n    _ActionCard\n);\n","import player from './player.svg';\nimport avatar1 from './npc1.svg';\nimport avatar2 from './npc2.svg';\nimport avatar3 from './npc3.svg';\nimport avatar4 from './npc4.svg';\nimport avatar5 from './npc5.svg';\nimport avatar6 from './npc6.svg';\nimport avatar7 from './npc7.svg';\nimport avatar8 from './npc8.svg';\nimport avatar9 from './npc9.svg';\nimport avatar10 from './npc10.svg';\nimport avatar11 from './npc11.svg';\nimport avatar12 from './npc12.svg';\nimport avatar13 from './npc13.svg';\nimport avatar14 from './npc14.svg';\nimport avatar15 from './npc15.svg';\nimport avatar16 from './npc16.svg';\nimport avatar17 from './npc17.svg';\nimport avatar18 from './npc18.svg';\nimport avatar19 from './npc19.svg';\nimport avatar20 from './npc20.svg';\nimport avatar21 from './npc21.svg';\nimport avatar22 from './npc22.svg';\nimport avatar23 from './npc23.svg';\nimport avatar24 from './npc24.svg';\nimport avatar25 from './npc25.svg';\nimport avatar26 from './npc26.svg';\nimport avatar27 from './npc27.svg';\nimport avatar28 from './npc28.svg';\nimport avatar29 from './npc29.svg';\nimport avatar30 from './npc30.svg';\nimport avatarChecked1 from './npc-checked1.svg';\nimport avatarChecked2 from './npc-checked2.svg';\nimport avatarChecked3 from './npc-checked3.svg';\nimport avatarChecked4 from './npc-checked4.svg';\nimport avatarChecked5 from './npc-checked5.svg';\nimport avatarChecked6 from './npc-checked6.svg';\nimport avatarChecked7 from './npc-checked7.svg';\nimport avatarChecked8 from './npc-checked8.svg';\nimport avatarChecked9 from './npc-checked9.svg';\nimport avatarChecked10 from './npc-checked10.svg';\nimport avatarChecked11 from './npc-checked11.svg';\nimport avatarChecked12 from './npc-checked12.svg';\nimport avatarChecked13 from './npc-checked13.svg';\nimport avatarChecked14 from './npc-checked14.svg';\nimport avatarChecked15 from './npc-checked15.svg';\nimport avatarChecked16 from './npc-checked16.svg';\nimport avatarChecked17 from './npc-checked17.svg';\nimport avatarChecked18 from './npc-checked18.svg';\nimport avatarChecked19 from './npc-checked19.svg';\nimport avatarChecked20 from './npc-checked20.svg';\nimport avatarChecked21 from './npc-checked21.svg';\nimport avatarChecked22 from './npc-checked22.svg';\nimport avatarChecked23 from './npc-checked23.svg';\nimport avatarChecked24 from './npc-checked24.svg';\nimport avatarChecked25 from './npc-checked25.svg';\nimport avatarChecked26 from './npc-checked26.svg';\nimport avatarChecked27 from './npc-checked27.svg';\nimport avatarChecked28 from './npc-checked28.svg';\nimport avatarChecked29 from './npc-checked29.svg';\nimport avatarChecked30 from './npc-checked30.svg';\n\nexport const avatars = {\n    player,\n    npc: [\n        avatar1,\n        avatar2,\n        avatar3,\n        avatar4,\n        avatar5,\n        avatar6,\n        avatar7,\n        avatar8,\n        avatar9,\n        avatar10,\n        avatar11,\n        avatar12,\n        avatar13,\n        avatar14,\n        avatar15,\n        avatar16,\n        avatar17,\n        avatar18,\n        avatar19,\n        avatar20,\n        avatar21,\n        avatar22,\n        avatar23,\n        avatar24,\n        avatar25,\n        avatar26,\n        avatar27,\n        avatar28,\n        avatar29,\n        avatar30\n    ],\n    npcChecked: [\n        avatarChecked1,\n        avatarChecked2,\n        avatarChecked3,\n        avatarChecked4,\n        avatarChecked5,\n        avatarChecked6,\n        avatarChecked7,\n        avatarChecked8,\n        avatarChecked9,\n        avatarChecked10,\n        avatarChecked11,\n        avatarChecked12,\n        avatarChecked13,\n        avatarChecked14,\n        avatarChecked15,\n        avatarChecked16,\n        avatarChecked17,\n        avatarChecked18,\n        avatarChecked19,\n        avatarChecked20,\n        avatarChecked21,\n        avatarChecked22,\n        avatarChecked23,\n        avatarChecked24,\n        avatarChecked25,\n        avatarChecked26,\n        avatarChecked27,\n        avatarChecked28,\n        avatarChecked29,\n        avatarChecked30\n    ]\n};\n","import { GameState, GameStatus } from '../reducers/game';\nimport { avatars } from '../svg';\n\nconst playerName = 'President Amy';\n\nconst npcData: { name: string; level: number; friends: number[] }[] = [\n    { name: 'Jenny', level: 2, friends: [1, 6] },\n    { name: 'Octavia', level: 2, friends: [0, 6] },\n    { name: 'Steph', level: 2, friends: [7, 14] },\n    { name: 'Estella', level: 3, friends: [4, 8] },\n    { name: 'Trinity', level: 5, friends: [3, 5, 10] },\n    { name: 'Laura', level: 4, friends: [4, 10, 11] },\n    { name: 'Philippa', level: 2, friends: [0, 1] },\n    { name: 'Astrid', level: 3, friends: [2, 13] },\n    { name: 'Aurelia', level: 3, friends: [3, 13] },\n    { name: 'Megan', level: 3, friends: [17, 22] },\n    { name: 'Billie', level: 4, friends: [4, 5, 11] },\n    { name: 'Harper', level: 4, friends: [4, 5, 10] },\n    { name: 'Harley', level: 3, friends: [13, 18] },\n    { name: 'Emma', level: 5, friends: [7, 8, 12, 20] },\n    { name: 'Alex', level: 3, friends: [2, 20, 21] },\n    { name: 'Bernie', level: 3, friends: [20, 22] },\n    { name: 'Sebastian', level: 3, friends: [22, 23] },\n    { name: 'Chad', level: 2, friends: [9, 29] },\n    { name: 'Freddie', level: 2, friends: [12, 19] },\n    { name: 'Jamie', level: 2, friends: [18, 26] },\n    { name: 'Eugene', level: 4, friends: [13, 14, 15] },\n    { name: 'Dom', level: 3, friends: [14, 26, 27] },\n    { name: 'Greg', level: 5, friends: [9, 15, 16, 23, 28] },\n    { name: 'Steve', level: 3, friends: [16, 22] },\n    { name: 'Adrian', level: 1, friends: [25] },\n    { name: 'Kevin', level: 1, friends: [24] },\n    { name: 'Jason', level: 3, friends: [19, 21, 27] },\n    { name: 'Marcus', level: 2, friends: [21, 26] },\n    { name: 'Danny', level: 3, friends: [22, 29] },\n    { name: 'Tommy', level: 2, friends: [17, 28] }\n];\n\nexport const getInitialGameState = (): GameState => {\n    return {\n        status: GameStatus.help,\n        turns: 0,\n        score: 0,\n        player: {\n            name: playerName,\n            avatarUrl: avatars.player,\n            level: 1,\n            exp: 0\n        },\n        npcs: npcData.map(({ name, level, friends }, id) => ({\n            id,\n            name,\n            avatarUrl: avatars.npc[id],\n            avatarSavedUrl: avatars.npcChecked[id],\n            level,\n            isCursed: true,\n            friends\n        })),\n        selectedNpc: null\n    };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, Button, List } from 'antd';\nimport { displayHelp } from '../actions';\nimport { StoreState } from '../reducers';\nimport { GameStatus } from '../reducers/game';\nimport { chanceOfFriendSave } from '../utils/calc';\n\ninterface AppProps {\n    isHelp: boolean;\n    displayHelp: typeof displayHelp;\n}\n\nconst tips = [\n    'Your likelihood of winning beer pong duels increases with your level.',\n    `Whenever each student is defeated, their immediate friends have a ${chanceOfFriendSave}% chance of their curse being lifted`\n];\n\nconst _HelpModal = ({ isHelp, displayHelp }: AppProps) => {\n    const onClickContinue = () => {\n        displayHelp(false);\n    };\n\n    return (\n        <Modal\n            title=\"Instructions\"\n            visible={isHelp}\n            onOk={onClickContinue}\n            onCancel={onClickContinue}\n            footer={[\n                <Button key=\"submit\" type=\"primary\" onClick={onClickContinue}>\n                    Continue\n                </Button>\n            ]}\n        >\n            <p>\n                The Neverending Party Curse has befallen one of the fraternities\n                on campus. This curse makes it impossible for any of the party\n                guests to leave, which means that they will eventually die of\n                exhaustion.\n            </p>\n            <p>\n                The party has been going on for three days now, and you, as the\n                university president, have decided to take matters into your own\n                hands.\n            </p>\n            <p>\n                According to one of your grad students, the Curse can be broken\n                by defeating each party attendee in beer pong, and that is\n                precisely what you will do...\n            </p>\n            <p>\n                <List\n                    size=\"small\"\n                    header={<h4>Tips</h4>}\n                    bordered\n                    dataSource={tips}\n                    renderItem={tip => <List.Item>{tip}</List.Item>}\n                />\n            </p>\n        </Modal>\n    );\n};\n\nconst mapStateToProps = ({ game }: StoreState): { isHelp: boolean } => {\n    const { status } = game;\n    return {\n        isHelp: status === GameStatus.help\n    };\n};\n\nexport const HelpModal = connect(mapStateToProps, { displayHelp })(_HelpModal);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, Button } from 'antd';\nimport { displayAbout } from '../actions';\nimport { StoreState } from '../reducers';\nimport { GameStatus } from '../reducers/game';\n\ninterface AppProps {\n    isAbout: boolean;\n    displayAbout: typeof displayAbout;\n}\n\nconst _AboutModal = ({ isAbout, displayAbout }: AppProps) => {\n    const onClickContinue = () => {\n        displayAbout(false);\n    };\n\n    return (\n        <Modal\n            title=\"About Neverending Party\"\n            visible={isAbout}\n            onOk={onClickContinue}\n            onCancel={onClickContinue}\n            footer={[\n                <Button key=\"submit\" type=\"primary\" onClick={onClickContinue}>\n                    Continue\n                </Button>\n            ]}\n        >\n            <p>\n                This game was made in three days by YD Zhao for Geta Game Jam\n                10.\n            </p>\n            <p>\n                You can see the source code{' '}\n                <a\n                    href=\"https://github.com/ydz-one/neverending-party\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    here\n                </a>\n                .\n            </p>\n            <p>\n                <strong>Tech:</strong> TypeScript, React, Redux, Ant Design,\n                vis.js\n                <br></br>\n                <strong>Icons:</strong> icons8, avataaars\n            </p>\n        </Modal>\n    );\n};\n\nconst mapStateToProps = ({ game }: StoreState): { isAbout: boolean } => {\n    const { status } = game;\n    return {\n        isAbout: status === GameStatus.about\n    };\n};\n\nexport const AboutModal = connect(mapStateToProps, { displayAbout })(\n    _AboutModal\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, Button } from 'antd';\nimport { resetGame } from '../actions';\nimport { StoreState } from '../reducers';\nimport { GameStatus } from '../reducers/game';\n\ninterface AppProps {\n    isWin: boolean;\n    turns: number;\n    resetGame: typeof resetGame;\n}\n\nconst _WinModal = ({ isWin, turns, resetGame }: AppProps) => (\n    <Modal\n        title=\"You're the best university president!\"\n        visible={isWin}\n        onOk={resetGame}\n        onCancel={resetGame}\n        footer={[\n            <Button key=\"submit\" type=\"primary\" onClick={resetGame}>\n                Play again\n            </Button>\n        ]}\n    >\n        <p>\n            {`Good job! You freed all the students from the cursed frat\n            house in ${turns} turns.`}\n        </p>\n    </Modal>\n);\n\nconst mapStateToProps = ({\n    game\n}: StoreState): { isWin: boolean; turns: number } => {\n    const { status, turns } = game;\n    return {\n        isWin: status === GameStatus.win,\n        turns\n    };\n};\n\nexport const WinModal = connect(mapStateToProps, { resetGame })(_WinModal);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Board } from './Board';\nimport { Header } from './Header';\nimport { ActionCard } from './ActionCard';\nimport { HelpModal } from './HelpModal';\nimport { AboutModal } from './AboutModal';\nimport { WinModal } from './WinModal';\n\nclass _App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <Header />\n                <Board />\n                <ActionCard />\n                <HelpModal />\n                <AboutModal />\n                <WinModal />\n            </div>\n        );\n    }\n}\n\nexport const App = connect()(_App);\n","import { combineReducers } from 'redux';\nimport { GameState, gameReducer } from './game';\n\nexport interface StoreState {\n    game: GameState;\n}\n\nexport const reducers = combineReducers<StoreState>({\n    game: gameReducer\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport { App } from './components/App';\nimport { reducers } from './reducers';\n\nconst store = createStore(reducers);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}